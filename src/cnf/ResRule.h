#ifndef RESRULE_H
#define RESRULE_H

#include <vector>

#include "Rule.h"
#include "Clause.h"


namespace cnf
{
    class ResRule : public Rule
    {
        private:
            const Clause clause_1;
            const Clause clause_2;

            const uint32_t constraint_id_1;
            const uint32_t constraint_id_2;

        public:
            /**
             * Constructor for ResRule.
             * 
             * @param clause_1 The first clause in the resolution rule.
             * @param clause_2 The second clause in the resolution rule.
             */
            ResRule(const Clause& clause_1, const Clause& clause_2);

            /**
             * Constructor for ResRule with constraint IDs.
             * 
             * @param clause_1 The first clause in the resolution rule.
             * @param clause_2 The second clause in the resolution rule.
             * @param constraint_id_1 The ID of the first constraint.
             * @param constraint_id_2 The ID of the second constraint.
             */
            ResRule(const Clause& clause_1, const Clause& clause_2, const uint32_t constraint_id_1, const uint32_t constraint_id_2);

            /**
             * Destructor for ResRule.
             */
            ~ResRule();

            /**
             * Get the pivot variable of the resolution rule.
             * 
             * @return The pivot variable.
             */
            const uint32_t get_pivot() const;

            /**
             * Apply the resolution rule to the two clauses.
             * 
             * @return A vector of new clauses generated by the resolution rule.
             */
            virtual std::vector<Clause> apply() const override;

            /**
             * Get the first clause in the resolution rule.
             * 
             * @return The first clause.
             */
            const Clause& getClause1() const;

            /**
             * Get the second clause in the resolution rule.
             * 
             * @return The second clause.
             */
            const Clause& getClause2() const;

            /**
             * Get the constraint ID of the first clause.
             * 
             * @return The constraint ID of the first clause.
             */
            const uint32_t get_constraint_id_1() const;

            /**
             * Get the constraint ID of the second clause.
             * 
             * @return The constraint ID of the second clause.
             */
            const uint32_t get_constraint_id_2() const;

            /**
             * Print the resolution rule to the standard output.
             */
            void print() const override;

            /**
             * Get the clause at the specified index.
             * 
             * @param index The index of the clause to get.
             * @return The clause at the specified index.
             */
            const Clause &operator[](const std::size_t index) const override;
    };
}

#endif