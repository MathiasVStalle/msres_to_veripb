#ifndef SPLITRULE_H
#define SPLITRULE_H

#include <set>
#include "Rule.h"
#include "../../cnf/Clause.h"

namespace parser
{
    namespace msres
    {
        class SplitRule : public Rule
        {
            private:
                const cnf::Clause clause;

            public:
                /**
                 * Constructor for SplitRule.
                 * 
                 * @param clause The clause to be split.
                 */
                SplitRule(const cnf::Clause& clause);

                /**
                 * Destructor for SplitRule.
                 */
                ~SplitRule();

                /**
                 * Apply the split rule.
                 * 
                 * @return A set of new clauses generated by the split rule.
                 */
                std::set<cnf::Clause> apply() const override;

                /**
                 * Get the clause in the split rule.
                 * 
                 * @return The clause.
                 */
                const cnf::Clause& getClause() const;

                /**
                 * Print the split rule to the standard output.
                 */
                void print() const override;
        };
    }
}

#endif