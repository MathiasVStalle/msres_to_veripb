#ifndef RESRULE_H
#define RESRULE_H

#include <set>
#include "Rule.h"
#include "../../cnf/Clause.h"

namespace parser
{
    namespace msres
    {
        class ResRule : public Rule
        {
            private:
                const cnf::Clause clause_1;
                const cnf::Clause clause_2;

            public:
                /**
                 * Constructor for ResRule.
                 * 
                 * @param clause_1 The first clause in the resolution rule.
                 * @param clause_2 The second clause in the resolution rule.
                 */
                ResRule(const cnf::Clause& clause_1, const cnf::Clause& clause_2);

                /**
                 * Destructor for ResRule.
                 */
                ~ResRule();

                /**
                 * Apply the resolution rule to the two clauses.
                 * 
                 * @return A set of new clauses generated by the resolution rule.
                 */
                virtual std::set<cnf::Clause> apply() const override;

                /**
                 * Get the first clause in the resolution rule.
                 * 
                 * @return The first clause.
                 */
                const cnf::Clause& getClause1() const;

                /**
                 * Get the second clause in the resolution rule.
                 * 
                 * @return The second clause.
                 */
                const cnf::Clause& getClause2() const;

                /**
                 * Print the resolution rule to the standard output.
                 */
                void print() const override;


        };
    }
}

#endif